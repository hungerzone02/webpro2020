<?php
use Psr\Http\Message\ServerRequestInterface as Request;
use Psr\Http\Message\ResponseInterface as Response;
use Psr\Http\Server\RequestHandlerInterface as RequestHandler;
use Dotenv\Dotenv;
use Slim\Factory\AppFactory;
// Load autoloading script
require_once __DIR__ . '/../vendor/autoload.php';

// Load .env file.
// Variables in .env will be loaded to $_SERVER.
$dotenv = Dotenv::createImmutable(__DIR__."/..");
$env = $dotenv->load();
// Create application.
$app = AppFactory::create();
$app->setBasePath($_SERVER['BASE_PATH']); // BASE_PATH value comes from .env

/**
* We use add method of $app to add external middleware.
* Add this middleware before error middleware.
*/
$app->add(
    function (Request $request, RequestHandler $handler): Response {
    $response = $handler->handle($request);
    $response->getBody()->write('<br /><br />Created by 612110xxx');
    return $response;
    }
    );

    
// Add routing middleware
$app->addRoutingMiddleware();
/**
* This middleware should be added last.
* The first parameter is a flag to indicate displaying error detail
* so we use APP_ENV variable to decide.
*/
$app->addErrorMiddleware($_SERVER['APP_ENV'] == 'dev', true, true);

/**
* Request by using GET method on URL /hello.
* Business logic is in closure function.
*/
$app->get('/hello',
function (Request $request, Response $response, $args): Response {
$response->getBody()->write("Hello World!!!");
return $response;
}
);

/**
* Request by GET method to URL /hello/{name}.
* The {name} is a placeholders and we can get them
* by using the last parameter ($args).
*/
$app->get('/hello/{name}',
function (Request $request, Response $response, $args): Response {
$response->getBody()->write("Hello, {$args['name']}. The page with URL placeholder.");
return $response;
}
);
// run application
$app->run();